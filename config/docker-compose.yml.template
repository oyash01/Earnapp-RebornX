version: '3.8'

services:
  earnapp:
    image: earnapp/earnapp:latest
    container_name: earnapp_${INSTANCE_NAME}
    restart: unless-stopped
    environment:
      - UUID=${INSTANCE_UUID}
      - PROXY_ENABLED=${PROXY_ENABLED}
      - PROXY_HOST=${PROXY_HOST}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
    volumes:
      - ./data:/app/data
    networks:
      - earnapp_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2G
        reservations:
          memory: 1G

  proxy:
    image: nginx:alpine
    container_name: proxy_${INSTANCE_NAME}
    restart: unless-stopped
    ports:
      - "${PORT:-8081}:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - earnapp_network
    depends_on:
      - earnapp
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512M
        reservations:
          memory: 256M

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower_${INSTANCE_NAME}
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30 --cleanup earnapp_${INSTANCE_NAME} proxy_${INSTANCE_NAME}
    networks:
      - earnapp_network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
        reservations:
          memory: 128M

  dashboard:
    image: earnapp/dashboard:latest
    container_name: dashboard_${INSTANCE_NAME}
    restart: unless-stopped
    ports:
      - "${DASHBOARD_PORT:-8082}:80"
    environment:
      - INSTANCE_NAME=${INSTANCE_NAME}
      - INSTANCE_UUID=${INSTANCE_UUID}
    volumes:
      - ./dashboard_data:/app/data
    networks:
      - earnapp_network
    depends_on:
      - earnapp
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 512M
        reservations:
          memory: 256M

networks:
  earnapp_network:
    driver: bridge 